# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Main

on: [push]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@v1

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: dart pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      # - name: Verify formatting
      #   run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        run: dart analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: dart test

  # build:
  #   name: Build
  #   if: startsWith(github.ref, 'refs/tags/')
  #   needs: [test]
  #   strategy:
  #     matrix:
  #       #os: [ubuntu-latest, windows-latest, macos-latest]
  #       os: [ubuntu-latest]
  #       include:
  #         - os: ubuntu-latest
  #           target: linux-x64
  #           binary: brokertotax
  #         - os: windows-latest
  #           target: windows-x64
  #           binary: brokertotax.exe
  #         - os: macos-latest
  #           target: macos-x64

  #   runs-on: ${{ matrix.os }}

  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: dart-lang/setup-dart@v1

  #     - name: Cache dependencies
  #       uses: actions/cache@v3
  #       with:
  #         path: ~/.pub-cache
  #         key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-pub-

  #     - name: Install dependencies
  #       run: dart pub get

  #     - name: Build release
  #       run: dart compile exe bin/main.dart -o build/main

  #     - name: Upload release
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: main-${{ matrix.target }}
  #         path: build/main
